module AvaTax
  class Client
    module ShippingVerificationBatches 


      # Enqueues a batch of AvaTax transactions to be deregistered by ASV
      #
      # 
      # Swagger Name: AvaTaxBeverageClient	  
      # @param companyCode [String] The company code of the company that recorded the transaction
      # @param batchCode [String] The batch code of generated by AvaTax batch transaction upload
      # @param api-version [String] (Optional): API version that should satisfy the request. If omitted, defaults to 2.2
      # @param x-avalara-version [String] (Optional): API version that should satisfy the request. If omitted, defaults to 2.2. Header takes precendence if both header and query parameters are present.
      # @return []
      def enqueue_batch_deregistration(companyCode, batchCode, options={}, x_avalara_version="")        path = "/api/v2/asv/companies/#{companyCode}/batches/#{batchCode}/deregister"
        headers= Hash.new
        headers["x-avalara-version"]=x_avalara_version if !(x_avalara_version.nil? || x_avalara_version.empty?);
        put(path, options, AvaTax::VERSION, headers)      end

      # Enqueues a batch of AvaTax transactions to be registered by ASV
      #
      # 
      # Swagger Name: AvaTaxBeverageClient	  
      # @param companyCode [String] The company code of the company that recorded the transaction
      # @param batchCode [String] The batch code generated by AvaTax for batch transaction upload process
      # @param api-version [String] (Optional): API version that should satisfy the request. If omitted, defaults to 2.2
      # @param x-avalara-version [String] (Optional): API version that should satisfy the request. If omitted, defaults to 2.2. Header takes precendence if both header and query parameters are present.
      # @return []
      def enqueue_batch_registration(companyCode, batchCode, options={}, x_avalara_version="")        path = "/api/v2/asv/companies/#{companyCode}/batches/#{batchCode}/register"
        headers= Hash.new
        headers["x-avalara-version"]=x_avalara_version if !(x_avalara_version.nil? || x_avalara_version.empty?);
        put(path, options, AvaTax::VERSION, headers)      end

      # Gets records for current and previously processed batch registration jobs
      #
      # 
      # Swagger Name: AvaTaxBeverageClient	  
      # @param accountId [String] (Optional): For users with access to multiple accounts, filters results to those associated with the specified Account ID. If not specified, the Account ID defaults to the one associated with the account
      # @return [Object]
      def get_batch_registration_data(options={})        path = "/api/v2/asv/batches"
        get(path, options, AvaTax::VERSION)      end
    end
  end
end